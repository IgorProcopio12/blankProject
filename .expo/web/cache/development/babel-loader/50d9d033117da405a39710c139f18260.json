{"ast":null,"code":"import ReactNativePropRegistry from \"./ReactNativePropRegistry\";\nimport flattenStyle from \"./flattenStyle\";\nvar absoluteFillObject = {\n  position: 'absolute',\n  left: 0,\n  right: 0,\n  top: 0,\n  bottom: 0\n};\nvar absoluteFill = ReactNativePropRegistry.register(absoluteFillObject);\nvar StyleSheet = {\n  absoluteFill: absoluteFill,\n  absoluteFillObject: absoluteFillObject,\n  compose: function compose(style1, style2) {\n    if (process.env.NODE_ENV !== 'production') {\n      var len = arguments.length;\n\n      if (len > 2) {\n        var readableStyles = Array.prototype.slice.call(arguments).map(function (a) {\n          return flattenStyle(a);\n        });\n        throw new Error(\"StyleSheet.compose() only accepts 2 arguments, received \" + len + \": \" + JSON.stringify(readableStyles));\n      }\n    }\n\n    if (style1 && style2) {\n      return [style1, style2];\n    } else {\n      return style1 || style2;\n    }\n  },\n  create: function create(styles) {\n    var result = {};\n    Object.keys(styles).forEach(function (key) {\n      if (process.env.NODE_ENV !== 'production') {\n        var validate = require(\"./validate\");\n\n        var interopValidate = validate.default ? validate.default : validate;\n        interopValidate(key, styles);\n      }\n\n      var id = styles[key] && ReactNativePropRegistry.register(styles[key]);\n      result[key] = id;\n    });\n    return result;\n  },\n  flatten: flattenStyle,\n  hairlineWidth: 1\n};\nexport default StyleSheet;","map":{"version":3,"sources":["C:/git/blankProject/node_modules/react-native-web/src/exports/StyleSheet/StyleSheet.js"],"names":["ReactNativePropRegistry","flattenStyle","absoluteFillObject","position","left","right","top","bottom","absoluteFill","register","StyleSheet","compose","style1","style2","process","env","NODE_ENV","len","arguments","length","readableStyles","map","a","Error","JSON","stringify","create","styles","result","Object","keys","forEach","key","validate","require","interopValidate","default","id","flatten","hairlineWidth"],"mappings":"AASA,OAAOA,uBAAP;AACA,OAAOC,YAAP;AAEA,IAAMC,kBAAkB,GAAG;AACzBC,EAAAA,QAAQ,EAAE,UADe;AAEzBC,EAAAA,IAAI,EAAE,CAFmB;AAGzBC,EAAAA,KAAK,EAAE,CAHkB;AAIzBC,EAAAA,GAAG,EAAE,CAJoB;AAKzBC,EAAAA,MAAM,EAAE;AALiB,CAA3B;AAOA,IAAMC,YAAY,GAAGR,uBAAuB,CAACS,QAAxB,CAAiCP,kBAAjC,CAArB;AAEA,IAAMQ,UAAU,GAAG;AACjBF,EAAAA,YAAY,EAAZA,YADiB;AAEjBN,EAAAA,kBAAkB,EAAlBA,kBAFiB;AAGjBS,EAAAA,OAHiB,mBAGTC,MAHS,EAGIC,MAHJ,EAGiB;AAChC,QAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AAEzC,UAAMC,GAAG,GAAGC,SAAS,CAACC,MAAtB;;AACA,UAAIF,GAAG,GAAG,CAAV,EAAa;AACX,YAAMG,cAAc,GAAG,2BAAIF,SAAJ,EAAeG,GAAf,CAAmB,UAAAC,CAAC;AAAA,iBAAIrB,YAAY,CAACqB,CAAD,CAAhB;AAAA,SAApB,CAAvB;AACA,cAAM,IAAIC,KAAJ,8DACuDN,GADvD,UAC+DO,IAAI,CAACC,SAAL,CACjEL,cADiE,CAD/D,CAAN;AAKD;AAEF;;AAED,QAAIR,MAAM,IAAIC,MAAd,EAAsB;AACpB,aAAO,CAACD,MAAD,EAASC,MAAT,CAAP;AACD,KAFD,MAEO;AACL,aAAOD,MAAM,IAAIC,MAAjB;AACD;AACF,GAvBgB;AAwBjBa,EAAAA,MAxBiB,kBAwBVC,MAxBU,EAwBM;AACrB,QAAMC,MAAM,GAAG,EAAf;AACAC,IAAAA,MAAM,CAACC,IAAP,CAAYH,MAAZ,EAAoBI,OAApB,CAA4B,UAAAC,GAAG,EAAI;AACjC,UAAIlB,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,YAAMiB,QAAQ,GAAGC,OAAO,cAAxB;;AACA,YAAMC,eAAe,GAAGF,QAAQ,CAACG,OAAT,GAAmBH,QAAQ,CAACG,OAA5B,GAAsCH,QAA9D;AACAE,QAAAA,eAAe,CAACH,GAAD,EAAML,MAAN,CAAf;AACD;;AACD,UAAMU,EAAE,GAAGV,MAAM,CAACK,GAAD,CAAN,IAAehC,uBAAuB,CAACS,QAAxB,CAAiCkB,MAAM,CAACK,GAAD,CAAvC,CAA1B;AACAJ,MAAAA,MAAM,CAACI,GAAD,CAAN,GAAcK,EAAd;AACD,KARD;AASA,WAAOT,MAAP;AACD,GApCgB;AAqCjBU,EAAAA,OAAO,EAAErC,YArCQ;AAyCjBsC,EAAAA,aAAa,EAAE;AAzCE,CAAnB;AA4CA,eAAe7B,UAAf","sourcesContent":["/**\r\n * Copyright (c) Nicolas Gallagher.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport ReactNativePropRegistry from './ReactNativePropRegistry';\r\nimport flattenStyle from './flattenStyle';\r\n\r\nconst absoluteFillObject = {\r\n  position: 'absolute',\r\n  left: 0,\r\n  right: 0,\r\n  top: 0,\r\n  bottom: 0\r\n};\r\nconst absoluteFill = ReactNativePropRegistry.register(absoluteFillObject);\r\n\r\nconst StyleSheet = {\r\n  absoluteFill,\r\n  absoluteFillObject,\r\n  compose(style1: any, style2: any) {\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      /* eslint-disable prefer-rest-params */\r\n      const len = arguments.length;\r\n      if (len > 2) {\r\n        const readableStyles = [...arguments].map(a => flattenStyle(a));\r\n        throw new Error(\r\n          `StyleSheet.compose() only accepts 2 arguments, received ${len}: ${JSON.stringify(\r\n            readableStyles\r\n          )}`\r\n        );\r\n      }\r\n      /* eslint-enable prefer-rest-params */\r\n    }\r\n\r\n    if (style1 && style2) {\r\n      return [style1, style2];\r\n    } else {\r\n      return style1 || style2;\r\n    }\r\n  },\r\n  create(styles: Object) {\r\n    const result = {};\r\n    Object.keys(styles).forEach(key => {\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        const validate = require('./validate');\r\n        const interopValidate = validate.default ? validate.default : validate;\r\n        interopValidate(key, styles);\r\n      }\r\n      const id = styles[key] && ReactNativePropRegistry.register(styles[key]);\r\n      result[key] = id;\r\n    });\r\n    return result;\r\n  },\r\n  flatten: flattenStyle,\r\n\r\n  // `hairlineWidth` is not implemented using screen density as browsers may\r\n  // round sub-pixel values down to `0`, causing the line not to be rendered.\r\n  hairlineWidth: 1\r\n};\r\n\r\nexport default StyleSheet;\r\n"]},"metadata":{},"sourceType":"module"}